import org.json.simple.JSONObject;

import java.io.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Scanner;
import java.util.regex.Pattern;

public class Main {
    public static void main(String[] args) throws IOException {
   /*     String s = "";
        Scanner in = new Scanner(new File("inputData.txt"));
        while (in.hasNext())
            s += in.nextLine() + "\r\n";
        try (FileWriter writer = new FileWriter("outputData.txt")) {
            Pattern space = Pattern.compile("[ ]");
            String name = "[a-zA-Z0-9]+|(\\s[a-zA-Z0-9])+";
            String speed = "speed:\\d{1,5}";
            String mass = "mass:\\d{1,10}";
            String passengers = "passengers:\\d{1,2}";
            String pilots = "pilots:\\d{1}";
            String wheels = "wheels:\\d{1,5}";
            String stewardess = "stewardess:\\d{0,2}";

            String[] words = space.split(s);

            ArrayList<String> nameList = new ArrayList<>();
            ArrayList<String> speedList = new ArrayList<>();
            ArrayList<String> massList = new ArrayList<>();
            ArrayList<String> passengersList = new ArrayList<>();
            ArrayList<String> pilotsList = new ArrayList<>();
            ArrayList<String> wheelsList = new ArrayList<>();
            ArrayList<String> stewardessList = new ArrayList<>();


            for (int i = 0; i < words.length; i++) {
                if (Pattern.matches(name, words[i])) {
                    //   writer.write(words[i] + " ");
                    nameList.add(words[i]);
                }
            }
            for (int i = 0; i < words.length; i++) {
                if (Pattern.matches(speed, words[i])) {
                    speedList.add(words[i].replaceAll("[^0-9]+", ""));
                }
            }
            for (int i = 0; i < words.length; i++) {
                if (Pattern.matches(mass, words[i])) {
                    massList.add(words[i].replaceAll("[^0-9]+", ""));
                }
            }
            for (int i = 0; i < words.length; i++) {
                if (Pattern.matches(passengers, words[i])) {
                    passengersList.add(words[i].replaceAll("[^0-9]+", ""));
                }
            }
            for (int i = 0; i < words.length; i++) {
                if (Pattern.matches(pilots, words[i])) {
                    pilotsList.add(words[i].replaceAll("[^0-9]+", ""));
                }
            }
            for (int i = 0; i < words.length; i++) {
                if (Pattern.matches(wheels, words[i])) {
                    wheelsList.add(words[i].replaceAll("[^0-9]+", ""));
                }
            }
            for (int i = 0; i < words.length; i++) {
                if (Pattern.matches(stewardess, words[i])) {

                    stewardessList.add(words[i].replaceAll("[^0-9]+", ""));
                }
            }


            ArrayList<Airlaner> airlanersList = new ArrayList<>();
            for (int i = 0; i < nameList.size(); i++) {
                Airlaner airlaner11 = new Airlaner(nameList.get(i), Integer.parseInt(speedList.get(i)), Integer.parseInt(massList.get(i)), Integer.parseInt(passengersList.get(i)), Integer.parseInt(wheelsList.get(i)), Integer.parseInt(pilotsList.get(i)), Integer.parseInt(stewardessList.get(i)));
                airlanersList.add(airlaner11);
            }
            for (int i = 0; i < airlanersList.size(); i++) {
                System.out.println(airlanersList.get(i));
            }
            Collections.sort(airlanersList, new Comparator<Airlaner>() {
                public int compare(Airlaner o1, Airlaner o2) {
                    return o1.toString().compareTo(o2.toString());
                }
            });
            for (int i = 0; i < airlanersList.size(); i++) {
                System.out.println(airlanersList.get(i));
            }
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            System.out.print("¬вед≥ть назву нового л≥така : ");
            String name1 = reader.readLine();
            System.out.print("¬вед≥ть швидк≥сть л≥така : ");
            int speed1 = Integer.parseInt(reader.readLine());
            System.out.print("¬вед≥ть вагу л≥така : ");
            int mass1 = Integer.parseInt(reader.readLine());
            System.out.print("¬вед≥ть к≥льк≥сть пасажир≥в л≥така : ");
            int passanger1 = Integer.parseInt(reader.readLine());
            System.out.print("¬вед≥ть к≥льк≥сть кол≥с л≥така : ");
            int wheel1 = Integer.parseInt(reader.readLine());
            System.out.print("¬вед≥ть к≥льк≥сть п≥лот≥в л≥така : ");
            int pilot1 = Integer.parseInt(reader.readLine());
            System.out.print("¬вед≥ть к≥льк≥сть стьюардес : ");
            int stewardess1 = Integer.parseInt(reader.readLine());
            Airlaner airlaner = new Airlaner(name1, speed1, mass1, passanger1, wheel1, pilot1, stewardess1);
            airlanersList.add(airlaner);
            Collections.sort(airlanersList, new Comparator<Airlaner>() {
                public int compare(Airlaner o1, Airlaner o2) {
                    return o1.toString().compareTo(o2.toString());
                }
            });
            for (int i = 0; i < airlanersList.size(); i++) {
                System.out.println(airlanersList.get(i));
            }
            for (int i = 0; i < airlanersList.size(); i++) {
                writer.write("Ќазва л≥така : " + airlanersList.get(i).getName() + " швидк≥сть л≥така : " + airlanersList.get(i).getSpeed() + " вага л≥така : " + airlanersList.get(i).getMass() + " к≥льк≥сть пасажир≥в л≥така : " + airlanersList.get(i).getNumberOfPassengers() + " к≥льк≥сть кол≥с л≥така : " + airlanersList.get(i).getNumberOfWheels() + " к≥льк≥сть п≥лот≥в л≥така : " + airlanersList.get(i).getNumberOfPilots() + "  к≥льк≥сть стьюардес л≥така : " + airlanersList.get(i).getNumberOfStewardess() + "  ");
            }
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
        System.out.println("-----------------------------------------------");
        Pattern space = Pattern.compile("[ ]");
        String sBinary = "";
        Scanner inBinary = new Scanner(new File("inputData.bin"));
        while (inBinary.hasNext())
            sBinary += inBinary.nextLine() + "\r\n";

        String[] words = space.split(sBinary);
        String result = "";
        for (int i = 0; i < words.length; i++) {

            String[] substr = new String[words[i].length() / 8];

            if (words[i].length() % 8 == 0) {
                substr = words[i].split("(?<=\\G.{8})");

                for (int j = 0; j < substr.length; j++) {
                    int count = Integer.parseInt(substr[j], 2);
                    String aChar = new Character((char) count).toString();
                    System.out.print(aChar);
                    result += aChar;
                }
            }
        }

        try (FileWriter writer = new FileWriter("outputData.bin")) {

            Pattern spaceBinary = Pattern.compile("[ ]");
            String nameB = "[a-zA-Z0-9]+";
            String speedB = "speed:\\d{1,5}";
            String massB = "mass:\\d{1,12}";
            String passangersB = "passangers:\\d{1,2}";
            String pilotsB = "pilots:\\d{1}";
            String wheelsB = "wheels:\\d{1,5}";
            String maxCapacityB = "maxCapacity:\\d{1,6}";
            String weightGoodsB = "weightGoods:\\d{1,6}";


            String[] wordsBinary = spaceBinary.split(result);

            ArrayList<String> nameListBin = new ArrayList<>();
            ArrayList<String> speedListBin = new ArrayList<>();
            ArrayList<String> massListBin = new ArrayList<>();
            ArrayList<String> passangersListBin = new ArrayList<>();
            ArrayList<String> pilotsListBin = new ArrayList<>();
            ArrayList<String> wheelsListBin = new ArrayList<>();
            ArrayList<String> maxCapacityListBin = new ArrayList<>();
            ArrayList<String> weightGoodsListBin = new ArrayList<>();


            for (int i = 0; i < wordsBinary.length; i++) {
                if (Pattern.matches(nameB, wordsBinary[i])) {
                    nameListBin.add(wordsBinary[i]);
                }
            }
            for (int i = 0; i < wordsBinary.length; i++) {
                if (Pattern.matches(speedB, wordsBinary[i])) {
                    speedListBin.add(wordsBinary[i].replaceAll("[^0-9]+", ""));
                }
            }
            for (int i = 0; i < wordsBinary.length; i++) {
                if (Pattern.matches(massB, wordsBinary[i])) {
                    massListBin.add(wordsBinary[i].replaceAll("[^0-9]+", ""));
                }
            }
            for (int i = 0; i < wordsBinary.length; i++) {
                if (Pattern.matches(passangersB, wordsBinary[i])) {
                    passangersListBin.add(wordsBinary[i].replaceAll("[^0-9]+", ""));
                }
            }
            for (int i = 0; i < wordsBinary.length; i++) {
                if (Pattern.matches(pilotsB, wordsBinary[i])) {
                    pilotsListBin.add(wordsBinary[i].replaceAll("[^0-9]+", ""));
                }
            }
            for (int i = 0; i < wordsBinary.length; i++) {
                if (Pattern.matches(wheelsB, wordsBinary[i])) {
                    wheelsListBin.add(wordsBinary[i].replaceAll("[^0-9]+", ""));
                }
            }
            for (int i = 0; i < wordsBinary.length; i++) {
                if (Pattern.matches(maxCapacityB, wordsBinary[i])) {
                    maxCapacityListBin.add(wordsBinary[i].replaceAll("[^0-9]+", ""));
                }
            }
            for (int i = 0; i < wordsBinary.length; i++) {
                if (Pattern.matches(weightGoodsB, wordsBinary[i])) {
                    weightGoodsListBin.add(wordsBinary[i].replaceAll("[^0-9]+", ""));
                }
            }

            ArrayList<TransportAirplane> transportAirplaneList = new ArrayList<>();
            for (int i = 0; i < nameListBin.size(); i++) {
                TransportAirplane transportAirplane = new TransportAirplane(nameListBin.get(i), Integer.parseInt(speedListBin.get(i)), Integer.parseInt(massListBin.get(i)), Integer.parseInt(passangersListBin.get(i)), Integer.parseInt(wheelsListBin.get(i)), Integer.parseInt(pilotsListBin.get(i)), Integer.parseInt(maxCapacityListBin.get(i)), Integer.parseInt(weightGoodsListBin.get(i)));
                transportAirplaneList.add(transportAirplane);
            }

            for (int i = 0; i < transportAirplaneList.size(); i++) {
                System.out.println(transportAirplaneList.get(i));
            }
            Collections.sort(transportAirplaneList, new Comparator<TransportAirplane>() {
                public int compare(TransportAirplane o1, TransportAirplane o2) {
                    return o1.toString().compareTo(o2.toString());
                }
            });
            for (int i = 0; i < transportAirplaneList.size(); i++) {
                System.out.println(transportAirplaneList.get(i));
            }
            BufferedReader reader1 = new BufferedReader(new InputStreamReader(System.in));
            System.out.println();
            System.out.print("¬вед≥ть назву нового л≥така : ");
            String name2 = reader1.readLine();
            System.out.print("¬вед≥ть швидк≥сть л≥така : ");
            int speed2 = Integer.parseInt(reader1.readLine());
            System.out.print("¬вед≥ть вагу л≥така : ");
            int mass2 = Integer.parseInt(reader1.readLine());
            System.out.print("¬вед≥ть к≥льк≥сть пасажир≥в л≥така : ");
            int passanger2 = Integer.parseInt(reader1.readLine());
            System.out.print("¬вед≥ть к≥льк≥сть кол≥с л≥така : ");
            int wheel2 = Integer.parseInt(reader1.readLine());
            System.out.print("¬вед≥ть к≥льк≥сть п≥лот≥в л≥така : ");
            int pilot2 = Integer.parseInt(reader1.readLine());
            System.out.print("¬вед≥ть максимальнy вантажн≥сть л≥така : ");
            int maxCapacity2 = Integer.parseInt(reader1.readLine());
            System.out.print("¬вед≥ть вагу вантажу : ");
            int weightGoods2 = Integer.parseInt(reader1.readLine());
            TransportAirplane transportAirplane1 = new TransportAirplane(name2, speed2, mass2, passanger2, wheel2, pilot2, maxCapacity2, weightGoods2);
            transportAirplaneList.add(transportAirplane1);
            Collections.sort(transportAirplaneList, new Comparator<TransportAirplane>() {
                public int compare(TransportAirplane o1, TransportAirplane o2) {
                    return o1.toString().compareTo(o2.toString());
                }
            });
            for (int i = 0; i < transportAirplaneList.size(); i++) {
                System.out.println(transportAirplaneList.get(i));
            }
            String textWrite = "";
            for (int i = 0; i < transportAirplaneList.size(); i++) {
                textWrite += "Ќазва л≥така : " + transportAirplaneList.get(i).getName() + " швидк≥сть л≥така : " + transportAirplaneList.get(i).getSpeed() + " вага л≥така : " + transportAirplaneList.get(i).getMass() + " к≥льк≥сть пасажир≥в л≥така : " + transportAirplaneList.get(i).getNumberOfPassengers() + " к≥льк≥сть кол≥с л≥така : " + transportAirplaneList.get(i).getNumberOfWheels() + " к≥льк≥сть п≥лот≥в л≥така : " + transportAirplaneList.get(i).getNumberOfPilots() + "  максимальна вантажн≥сть л≥така : " + transportAirplaneList.get(i).getMaxLoadingCapacity() + " вага вантажу : " + transportAirplaneList.get(i).getWeightGoods();
            }
            Scanner scanner = new Scanner(textWrite);
            String str = scanner.nextLine();

            for (int val : str.toCharArray()) {
                writer.write(Integer.toBinaryString(val) + " ");
            }
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }

        JSONObject object = new JSONObject();
        object.put("wheels", 4);
        object.put("passengers", 34);
        object.put("mass", 400);
        object.put("speed", 80);
        object.put("endRoute", "Kvarc");
        object.put("beginningRoute", "Sadova");
        object.put("name", "Bogdan");


        JSONObject object2 = new JSONObject();
        object2.put("wheels", 4);
        object2.put("passengers", 34);
        object2.put("mass", 3400);
        object2.put("speed", 80);
        object2.put("endRoute", "Sadova");
        object2.put("beginningRoute", "Kalinka");
        object2.put("name", "Bogdan");

        ArrayList<JSONObject> jsonObjectArrayList = new ArrayList<>();
        ArrayList<UrbanBus> urbanBusArrayList = new ArrayList<>();
        jsonObjectArrayList.add(object);
        jsonObjectArrayList.add(object2);
        try (FileWriter writerJson = new FileWriter("inputData.json")) {
            writerJson.write(String.valueOf(object));
            writerJson.write(String.valueOf(object2));
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
        UrbanBus urbanBus = new UrbanBus("Bogdan", 80, 3400, 34, 4, "—адова", "ƒр≥ж завод");
        UrbanBus urbanBus2 = new UrbanBus("Bogdan", 80, 3400, 34, 4, "Kalinka", "Sadova");
        urbanBusArrayList.add(urbanBus);
        urbanBusArrayList.add(urbanBus2);
        Collections.sort(urbanBusArrayList, new Comparator<UrbanBus>() {
            public int compare(UrbanBus o1, UrbanBus o2) {
                return o1.toString().compareTo(o2.toString());
            }
        });

        try (FileWriter writerOutputJson = new FileWriter("outputData.json")) {

            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            System.out.print("¬вед≥ть назву нового автобуса : ");
            String name1 = reader.readLine();
            System.out.print("¬вед≥ть швидк≥сть автобуса : ");
            int speed1 = Integer.parseInt(reader.readLine());
            System.out.print("¬вед≥ть вагу автобуса : ");
            int mass1 = Integer.parseInt(reader.readLine());
            System.out.print("¬вед≥ть к≥льк≥сть пасажир≥в автобуса : ");
            int passanger1 = Integer.parseInt(reader.readLine());
            System.out.print("¬вед≥ть к≥льк≥сть кол≥с автобуса : ");
            int wheel1 = Integer.parseInt(reader.readLine());
            System.out.print("¬вед≥ть назву першоњ зупинки : ");
            String beginningOfRouteName = reader.readLine();
            System.out.print("¬вед≥ть назву останньоњ зупинки : ");
            String endOfRouteName = reader.readLine();
            urbanBusArrayList.add(new UrbanBus(name1, speed1, mass1, passanger1, wheel1, beginningOfRouteName, endOfRouteName));
            Collections.sort(urbanBusArrayList, new Comparator<UrbanBus>() {
                public int compare(UrbanBus o1, UrbanBus o2) {
                    return o1.toString().compareTo(o2.toString());
                }
            });
            for (int i = 0; i < urbanBusArrayList.size(); i++)
                writerOutputJson.write("{\"name\":\"" + urbanBusArrayList.get(i).getName() + "\",\"speed\":\"" + urbanBusArrayList.get(i).getSpeed() + "\",\"mass\":\"" + urbanBusArrayList.get(i).getMass() + "\",\"passenger\":\"" + urbanBusArrayList.get(i).getNumberOfPassengers() + "\",\"wheel\":\"" + urbanBusArrayList.get(i).getNumberOfWheels() + "\",\"beginningRoute\":\"" + urbanBusArrayList.get(i).getBeginningOfRouteName() + "\",\"endRoute\":\"" + urbanBusArrayList.get(i).getEndOfRouteName() + "}");
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }


        Plane plane = new Plane("ЅоЇнг Ѕ251-¬", 400, 50000, 40, 4, 2);
        Airlaner airlaner = new Airlaner("ЅоЇнг Ѕ251-¬", 400, 50000, 40, 4, 2, 2);
        TransportAirplane transportAirplane = new TransportAirplane("ЅоЇнг Ѕ251-¬", 400, 50000, 40, 4, 2, 500000, 20000);
        Bus bus = new Bus("јвтобус", 120, 2000, 28, 4);
        UrbanBus urbanBus = new UrbanBus("јвтобус", 120, 2000, 28, 4, "—адова", "ƒр≥ж завод");
        IntercityDouble_DeckerBus intercityDoubleDeckerBus = new IntercityDouble_DeckerBus("јвтобус", 120, 2000, 28, 4, 2, "„ерн≥вц≥-–им");
        System.out.println("******************************************");
        System.out.println(plane.toString());
        System.out.println("------------------------------------------");
        System.out.println(airlaner.toString());
        System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
        System.out.println(transportAirplane.toString());
        System.out.println();
        System.out.println();
        System.out.println();
        System.out.println("__________________________________________");
        System.out.println(bus.getInfo());
        System.out.println("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$");
        System.out.println(urbanBus.getInfo());
        System.out.println("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%");
        System.out.println(intercityDoubleDeckerBus.getInfo());*/
    }
}
